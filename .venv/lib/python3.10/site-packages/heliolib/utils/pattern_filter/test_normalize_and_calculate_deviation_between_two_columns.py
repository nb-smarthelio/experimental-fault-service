import numpy as np
import pytest
import pandas as pd

from heliolib.utils.pattern_filter import (
    normalize_and_calculate_deviation_between_two_columns,
    InvalidColumnValueException,
)


def invalid_dataframe_with_slave_column_nan():
    df = pd.DataFrame(
        {"col1": [i for i in range(5)], "col2": [np.nan for i in range(5)]}
    )
    return df


def invalid_dataframe_with_master_column_nan():
    df = pd.DataFrame(
        {"col1": [np.nan for i in range(5)], "col2": [i for i in range(5)]}
    )
    return df


def invalid_dataframe_with_master_column_less_than_zero():
    df = pd.DataFrame({"col1": [-1 for i in range(5)], "col2": [6 for i in range(5)]})
    return df


def test_normalize_and_calculate_deviation_between_two_columns_with_master_column_nan():
    df = invalid_dataframe_with_master_column_nan()
    with pytest.raises(InvalidColumnValueException) as error:
        normalize_and_calculate_deviation_between_two_columns(df)

    error = str(error.value)
    assert (
        error[error.find(" ") + 1 :]
        == "Column does not pass the Validation. It contains the value NaN, zero or less than it."
    )


def test_normalize_and_calculate_deviation_between_two_columns_with_slave_column_nan():
    df = invalid_dataframe_with_slave_column_nan()
    with pytest.raises(InvalidColumnValueException) as error:
        normalize_and_calculate_deviation_between_two_columns(df)

    error = str(error.value)
    assert (
        error[error.find(" ") + 1 :]
        == "Column does not pass the Validation. It contains the value NaN, zero or less than it."
    )


def test_normalize_and_calculate_deviation_between_two_columns_master_column_less_than_zero():
    df = invalid_dataframe_with_master_column_less_than_zero()
    with pytest.raises(InvalidColumnValueException) as error:
        normalize_and_calculate_deviation_between_two_columns(df)

    error = str(error.value)
    assert (
        error[error.find(" ") + 1 :]
        == "Column does not pass the Validation. It contains the value NaN, zero or less than it."
    )
