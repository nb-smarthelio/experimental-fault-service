import pytz
import datetime
from datetime import timezone
from heliolib.metadata_extraction_service import MetadataAPI


def convert_date(
    current_utc_time: datetime.datetime, destination_time_zone: str
) -> datetime.datetime:
    """
    Convert a UTC datetime to a specified timezone.

    Parameters
    ----------
        current_utc_time (datetime.datetime):
            The UTC datetime to convert.
        destination_time_zone (str):
            The name of the destination timezone (e.g., 'America/New_York').

    Returns
    -------
        datetime.datetime:
            The converted datetime in the destination timezone.
    """

    utc_moment = current_utc_time.replace(tzinfo=pytz.utc)
    return utc_moment.astimezone(pytz.timezone(destination_time_zone))


class PlantProvider:
    def __init__(self, metadb_api: MetadataAPI) -> None:
        """
        Initialize a PlantProvider instance with a MetadataAPI.

        Parameters
        ----------
            metadb_api (MetadataAPI):
                An instance of the MetadataAPI for retrieving plant information.
        """
        self.metadb_api = metadb_api

    def get_plants_to_run_at(self, hour: int) -> list:
        """
        Get a list of plant IDs to run at a specified hour.

        Parameters
        ----------
            hour (int):
                The hour to filter plants for (0 to 23).

        Returns
        -------
            list:
                A list of plant IDs that should run at the specified hour.
        """
        plants = self.metadb_api.get_plants().to_dict()

        if len(plants) == 0:
            print(f"No plants found in Metadata-API")
            return []

        result = []
        for plant_index in plants["plant_id"]:
            plant_id = plants["plant_id"][plant_index]
            plant_timezone = plants["timezone"][plant_index]

            localised_date = convert_date(
                datetime.datetime.now(timezone.utc), plant_timezone
            )

            if localised_date.hour == hour:
                result.append(plant_id)

        return result
