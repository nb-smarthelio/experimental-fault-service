import requests
from urllib3.util.retry import Retry
from requests.adapters import HTTPAdapter


def retry_api_session(
    url: str, retries=3, backoff_factor=3, allowed_request_type=None
) -> requests.Session:
    """
    Initializes a requests.Session with retry logic for specific HTTP methods.

    Parameters
    ----------
    url : str
        The base URL for the API.
    retries : int, optional
        The number of times to retry a request, by default 3.
    backoff_factor : int, optional
        A backoff factor to apply between attempts after the second try, by default 3.
    allowed_request_type : list of str or None
        HTTP methods that should be retried, by default None.

    Returns
    -------
    session : requests.Session
        A requests.Session object configured with retry logic.

    Raises
    ------
    Exception
        If `allowed_request_type` is None.
    """

    if allowed_request_type is None:
        raise Exception("Empty allowed_request_type param received!")

    session = requests.Session()
    retry = Retry(
        total=retries,
        backoff_factor=backoff_factor,
        status_forcelist=[502, 503, 504],
        allowed_methods=frozenset(allowed_request_type),
    )

    adapter = HTTPAdapter(max_retries=retry)
    session.mount(url, adapter)

    return session
