import pandas as pd


def check_continuity_of_timeseries_index(
    data: pd.Series, minimum_data_points: int, data_freq: int
) -> tuple:
    """
    Checks for continuity in the index of time series data by analyzing consecutive subsets.

    This function evaluates the index of the input time series data for continuity by
    examining consecutive subsets. These subsets are defined by a specified minimum number of
    data points and the maximum allowable time difference between consecutive indices
    (data frequency). The function returns three outputs: a list of boolean values indicating
    whether each subset is continuous, a DataFrame containing the data from continuous subsets,
    and a list of lists containing the indices of continuous subsets.

    For example, with input data [1, 2, 3, 7, 8, 10, 12, 13] and index=['2022-01-01 00:00', '2022-01-01 00:01',
    '2022-01-01 00:02', '2022-01-01 00:04', '2022-01-01 00:05', '2022-01-01 00:07', '2022-01-01 00:08', '2022-01-01 00:09'],
    a minimum_data_points of 3, and a data_freq of 1 minute, the function searches for continuous
    subsets of 3 data points with timestamps not exceeding 1 minute apart.

    There are 8 timestamps in the index, so the function checks for continuity in 6 subsets:
    ["2022-01-01 00:00", "2022-01-01 00:01", "2022-01-01 00:02"],["2022-01-01 00:01", "2022-01-01 00:02", "2022-01-01 00:04"],
    ["2022-01-01 00:02", "2022-01-01 00:04", "2022-01-01 00:05"],["2022-01-01 00:04", "2022-01-01 00:05", "2022-01-01 00:07"],
    ["2022-01-01 00:05", "2022-01-01 00:07", "2022-01-01 00:08"],["2022-01-01 00:07", "2022-01-01 00:08", "2022-01-01 00:09"].

    The function will loop over the range(len(data) - minimum_data_points + 1) that is range(8 - 3 + 1) = range(6).
    In first iteration, it will check for continuity in ["2022-01-01 00:00", "2022-01-01 00:01", "2022-01-01 00:02"].
    The mean time difference between consecutive data points is 1 minute, so the subset is continuous.
    In second iteration, it will check for continuity in ["2022-01-01 00:01", "2022-01-01 00:02", "2022-01-01 00:04"].
    The mean time difference between consecutive data points is 1.5 minutes, so the subset is not continuous.
    In third iteration, it will check for continuity in ["2022-01-01 00:02", "2022-01-01 00:04", "2022-01-01 00:05"].
    The mean time difference between consecutive data points is 1.5 minutes, so the subset is not continuous.

    The process involves multiple iterations, each checking a subset of the specified size. It
    calculates the mean time difference between consecutive data points in each subset and compares
    this to the specified frequency threshold. Based on this comparison, it determines the continuity
    of each subset, collects data from continuous subsets, and records the indices of these subsets.

    Parameters:
    - data : pd.Series
        The input time series data.
    - minimum_data_points : int
        The minimum number of data points for a subset to be considered.
    - data_freq : int
        The maximum time difference (in minutes) allowed between consecutive data points, defining the frequency.

    Returns:
    - list of bool
        Indicates the continuity status of each subset examined.
    - pd.DataFrame
        Contains the data from continuous subsets, with duplicates removed and indices sorted.
    - list of lists
        Contains the indices of continuous subsets, each list corresponding to a continuous subset in the data.

    Example:
    import pandas as pd
    data = pd.Series([1, 2, 3, 7, 8, 10, 12], index=pd.to_datetime(['2022-01-01 00:00', '2022-01-01 00:01',
    '2022-01-01 00:02', '2022-01-01 00:04', '2022-01-01 00:05', '2022-01-01 00:07', '2022-01-01 00:08']))

    continuous, timestamps_to_keep, continuous_indices = check_continuity_of_timeseries_index(data, 3, 1)

    print(continuous)
    [True, False, False, False, False]

    print(timestamps_to_keep)
                       0
    2022-01-01 00:00:00  1
    2022-01-01 00:01:00  2
    2022-01-01 00:02:00  3

    print(continuous_indices)
    [['2022-01-01 00:00', '2022-01-01 00:01', '2022-01-01 00:02'], ['2022-01-01 00:07', '2022-01-01 00:08']]

    """
    continuous = []
    timestamps_to_keep = pd.DataFrame()
    continuous_indices = []
    temp_indices = []

    # Loop through the data to check for continuity
    for i in range(len(data) - minimum_data_points + 1):
        sub_series = data[i : i + minimum_data_points]

        # Calculate the mean time difference between consecutive data points
        time_diff = sub_series.index.to_series().diff().mean()

        # Check if the mean time difference is within the specified frequency threshold
        if time_diff <= pd.Timedelta(data_freq, "T"):
            continuous.append(True)
            # Collect continuous subsets
            timestamps_to_keep = pd.concat([timestamps_to_keep, sub_series], axis=0)
            temp_indices.extend(sub_series.index.tolist())
            # sort and drop duplicates from temp_indices
            # drop duplicates from temp_indices
            temp_indices = sorted(set(temp_indices))
        else:
            continuous.append(False)
            if len(temp_indices) > 0:
                continuous_indices.append(temp_indices)
            temp_indices = []

    # Append the remaining temp_indices
    if len(temp_indices) >= minimum_data_points:
        continuous_indices.append(temp_indices)

    # Drop duplicates
    timestamps_to_keep = timestamps_to_keep[
        ~timestamps_to_keep.index.duplicated()
    ].sort_index()

    return continuous, timestamps_to_keep, continuous_indices
