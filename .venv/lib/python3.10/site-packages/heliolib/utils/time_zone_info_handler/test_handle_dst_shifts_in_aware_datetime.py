import pandas as pd
from heliolib.utils.time_zone_info_handler import TimeZoneInfoHandler


def prepare_time_zone_aware_dst_transition_dataframe():
    """Returns a DataFrame with a timezone-aware DatetimeIndex that includes DST transitions (US/Eastern)."""
    dates = pd.date_range("2023-10-28", "2023-10-30", freq="15T", tz="Europe/Berlin")
    return pd.DataFrame({"data": range(len(dates))}, index=dates)


def prepare_time_zone_aware_no_dst_transition_dataframe():
    """Returns a DataFrame with a timezone-aware DatetimeIndex without DST transitions (Asia/Tokyo)."""
    dates = pd.date_range("2021-03-14", "2021-03-15", freq="15T", tz="Asia/Tokyo")
    return pd.DataFrame({"data": range(len(dates))}, index=dates)


def test_dst_shift_handling_in_aware_datetime_with_transitions_validated_for_time_zone_aware_dataframe():
    dst_transition_dataframe = prepare_time_zone_aware_dst_transition_dataframe()
    timezone_handler = TimeZoneInfoHandler()
    timezone_handler.handle_dst_shifts_in_aware_datetime(
        dataframe=dst_transition_dataframe
    )
    assert str(dst_transition_dataframe.index.tzinfo) == "UTC"


def test_dst_shift_handling_in_aware_datetime_without_transitions_fails_for_time_zone_aware_dataframe_without_dst_transition():
    no_dst_transition_dataframe = prepare_time_zone_aware_no_dst_transition_dataframe()
    timezone_handler = TimeZoneInfoHandler()
    timezone_handler.handle_dst_shifts_in_aware_datetime(
        dataframe=no_dst_transition_dataframe
    )
    assert str(no_dst_transition_dataframe.index.tzinfo) == "Asia/Tokyo"
