import pandas as pd


def row_wise_nonnull_quantification(data: pd.DataFrame, total_inverters: int) -> list:
    """
    Calculate the non-null quantification ratio for each row in a DataFrame.

    This function iterates through the rows of the input DataFrame 'data' and calculates
    the non-null quantification ratio for each row. The non-null quantification ratio
    is defined as 1 minus the ratio of the number of null (missing) values in the row
    to the total number of inverters.

    Parameters:
    - data (pd.DataFrame): The input DataFrame containing data to be processed.
    - total_inverters (int): The total number of inverters used for the quantification.

    Returns:
    - list of float: A list of non-null quantification ratios for each row in the input data.

    Example:
    # >>> import pandas as pd
    # >>> data = pd.DataFrame({'A': [1, 2, None, 4], 'B': [None, 2, 3, 4], 'C': [1, 2, 1, 4]})
    # >>> total_inverters = 3
    # >>> nonnull_quantification(data, total_inverters)
    [0.6666666666666667, 0.33333333333333326, 0.0, 1.0]
    """
    values = []
    for i, r in data.iterrows():
        row = r.iloc[:]
        not_nulls = row.notnull().sum()
        ratio = not_nulls / total_inverters
        values.append(ratio)
    return values
